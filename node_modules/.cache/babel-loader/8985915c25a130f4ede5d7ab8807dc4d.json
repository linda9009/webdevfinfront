{"ast":null,"code":"var _jsxFileName = \"/Users/linda/web_dev/webdevfinfront/src/components/containers/EditStudentContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport { fetchStudentThunk, editStudentThunk } from \"../../store/thunks\";\nimport { EditStudentView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let student = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        email: this.state.email,\n        campusId: this.state.campusId\n      };\n      let updatedStudent = await this.props.editStudent(student);\n      this.setState({\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        campusId: null,\n        redirect: true,\n        redirectId: updatedStudent.id\n      });\n    };\n\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      campusId: null,\n      redirect: false,\n      redirectId: null\n    };\n  }\n\n  componentDidMount() {\n    //getting student ID from url\n    this.props.fetchStudent(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/student/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(EditStudentView, {\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n} // map state to props\n\n\nconst mapState = state => {\n  return {\n    student: state.student\n  };\n}; // map dispatch to props\n\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchStudent: id => dispatch(fetchStudentThunk(id)),\n    editStudent: student => dispatch(editStudentThunk(student))\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditStudentContainer);","map":{"version":3,"sources":["/Users/linda/web_dev/webdevfinfront/src/components/containers/EditStudentContainer.js"],"names":["React","Component","connect","Redirect","fetchStudentThunk","editStudentThunk","EditStudentView","EditStudentContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","student","firstname","state","lastname","email","campusId","updatedStudent","editStudent","redirect","redirectId","id","componentDidMount","fetchStudent","match","params","componentWillUnmount","render","mapState","mapDispatch","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport { fetchStudentThunk, editStudentThunk } from \"../../store/thunks\";\nimport { EditStudentView } from \"../views\";\n\nclass EditStudentContainer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          firstname: \"\", \n          lastname: \"\", \n          email: \"\",\n          campusId: null, \n          redirect: false, \n          redirectId: null\n        };\n    }\n  componentDidMount() {\n    //getting student ID from url\n    this.props.fetchStudent(this.props.match.params.id);\n  }\n\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\nhandleSubmit = async event => {\n    event.preventDefault();\n\n    let student = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        email: this.state.email,\n        campusId: this.state.campusId \n        \n    };\n    \n    let updatedStudent = await this.props.editStudent(student);\n\n    this.setState({\n      firstname: \"\", \n      lastname: \"\", \n      email: \"\",\n      campusId: null, \n      redirect: true, \n      redirectId: updatedStudent.id\n    });\n}\ncomponentWillUnmount() {\n    this.setState({redirect: false, redirectId: null});\n}\nrender() {\n    if(this.state.redirect) {\n      return (<Redirect to={`/student/${this.state.redirectId}`}/>)\n    }\n    return (\n      <EditStudentView \n        handleChange = {this.handleChange} \n        handleSubmit={this.handleSubmit}      \n      />\n    );\n}\n}\n// map state to props\nconst mapState = (state) => {\n  return {\n    student: state.student,\n  };\n};\n\n// map dispatch to props\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n    editStudent: (student) => dispatch(editStudentThunk(student)),\n  };\n}\n\nexport default connect(mapState, mapDispatch)(EditStudentContainer);"]},"metadata":{},"sourceType":"module"}