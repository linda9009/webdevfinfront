{"ast":null,"code":"var _jsxFileName = \"/Users/linda/web_dev/webdevfinfront/src/components/containers/EditCampusContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport { fetchCampusThunk, editCampusThunk } from \"../../store/thunks\";\nimport { EditCampusView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditCampusContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let campus = {\n        name: this.state.name,\n        imageUrl: this.state.imageUrl,\n        address: this.state.address,\n        description: this.state.description,\n        id: this.props.campus.id\n      };\n      let updatedCampus = await this.props.editCampus(campus);\n      this.setState({\n        name: \"\",\n        imageUrl: \"\",\n        address: \"\",\n        description: \"\",\n        redirect: true,\n        redirectId: this.props.campus.id\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      imageUrl: \"\",\n      address: \"\",\n      description: \"\",\n      redirect: false,\n      redirectId: null\n    };\n  }\n\n  componentDidMount() {\n    //getting Campus ID from url\n    this.props.fetchCampus(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/campuses/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(EditCampusView, {\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n} // map state to props\n\n\nconst mapState = state => {\n  return {\n    campus: state.campus\n  };\n}; // map dispatch to props\n\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchCampus: id => dispatch(fetchCampusThunk(id)),\n    editCampus: campus => dispatch(editCampusThunk(campus))\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditCampusContainer);","map":{"version":3,"sources":["/Users/linda/web_dev/webdevfinfront/src/components/containers/EditCampusContainer.js"],"names":["React","Component","connect","Redirect","fetchCampusThunk","editCampusThunk","EditCampusView","EditCampusContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","campus","state","imageUrl","address","description","id","updatedCampus","editCampus","redirect","redirectId","componentDidMount","fetchCampus","match","params","componentWillUnmount","render","mapState","mapDispatch","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport { fetchCampusThunk, editCampusThunk } from \"../../store/thunks\";\nimport { EditCampusView } from \"../views\";\n\nclass EditCampusContainer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: \"\",\n            imageUrl: \"\",\n            address: \"\",\n            description: \"\", \n          redirect: false, \n          redirectId: null\n        };\n    }\n  componentDidMount() {\n    //getting Campus ID from url\n    this.props.fetchCampus(this.props.match.params.id);\n  }\n\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\nhandleSubmit = async event => {\n    event.preventDefault();\n\n    let campus = {\n        name: this.state.name,\n        imageUrl: this.state.imageUrl,\n        address: this.state.address,\n        description: this.state.description ,\n        id: this.props.campus.id\n        \n    };\n    \n    let updatedCampus = await this.props.editCampus(campus);\n\n    this.setState({\n        name: \"\",\n        imageUrl: \"\",\n        address: \"\",\n        description: \"\",\n        redirect: true, \n        redirectId: this.props.campus.id\n    });\n}\ncomponentWillUnmount() {\n    this.setState({redirect: false, redirectId: null});\n}\nrender() {\n    if(this.state.redirect) {\n      return (<Redirect to={`/campuses/${this.state.redirectId}`}/>)\n    }\n    return (\n      <EditCampusView \n        handleChange = {this.handleChange} \n        handleSubmit={this.handleSubmit}      \n      />\n    );\n}\n}\n// map state to props\nconst mapState = (state) => {\n  return {\n    campus: state.campus,\n  };\n};\n\n// map dispatch to props\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n    editCampus: (campus) => dispatch(editCampusThunk(campus)),\n  };\n}\n\nexport default connect(mapState, mapDispatch)(EditCampusContainer);"]},"metadata":{},"sourceType":"module"}