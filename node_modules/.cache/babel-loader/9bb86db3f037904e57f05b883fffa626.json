{"ast":null,"code":"var _jsxFileName = \"/Users/linda/web_dev/webdevfinfront/src/components/containers/EditStudentContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport { fetchStudentThunk, addStudentThunk } from \"../../store/thunks\";\nimport { EditStudentView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditStudentContainer extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    //getting student ID from url\n    this.props.fetchStudent(this.props.match.params.id);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(EditStudentView, {\n      student: this.props.student\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nhandleSubmit = async event => {\n  event.preventDefault();\n  let student = {\n    firstname: this.state.firstname,\n    lastname: this.state.lastname,\n    email: this.state.email,\n    campusId: this.state.campusId\n  };\n  let updatedStudent = await this.props.editStudent(student);\n  this.setState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    campusId: null,\n    redirect: true,\n    redirectId: updatedStudent.id\n  });\n}; // map state to props\n\n\nconst mapState = state => {\n  return {\n    student: state.student\n  };\n}; // map dispatch to props\n\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchStudent: id => dispatch(fetchStudentThunk(id)),\n    editStudent: student => dispatch(editStudentThunk(student))\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditStudentContainer);","map":{"version":3,"sources":["/Users/linda/web_dev/webdevfinfront/src/components/containers/EditStudentContainer.js"],"names":["React","Component","connect","Redirect","fetchStudentThunk","addStudentThunk","EditStudentView","EditStudentContainer","handleChange","event","setState","target","name","value","componentDidMount","props","fetchStudent","match","params","id","render","student","handleSubmit","preventDefault","firstname","state","lastname","email","campusId","updatedStudent","editStudent","redirect","redirectId","mapState","mapDispatch","dispatch","editStudentThunk"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,oBAAnD;AACA,SAASC,eAAT,QAAgC,UAAhC;;;AAEA,MAAMC,oBAAN,SAAmCN,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAc3CO,YAd2C,GAc5BC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AACZ,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADtB,OAAd;AAGD,KAlB0C;AAAA;;AAC3CC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhD;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,eAAD;AACE,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM;AADtB;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAZ0C;;AAqB7CC,YAAY,GAAG,MAAMb,KAAN,IAAe;AAC1BA,EAAAA,KAAK,CAACc,cAAN;AAEA,MAAIF,OAAO,GAAG;AACVG,IAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD,SADZ;AAEVE,IAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAFX;AAGVC,IAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAHR;AAIVC,IAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG;AAJX,GAAd;AAQA,MAAIC,cAAc,GAAG,MAAM,KAAKd,KAAL,CAAWe,WAAX,CAAuBT,OAAvB,CAA3B;AAEA,OAAKX,QAAL,CAAc;AACZc,IAAAA,SAAS,EAAE,EADC;AAEZE,IAAAA,QAAQ,EAAE,EAFE;AAGZC,IAAAA,KAAK,EAAE,EAHK;AAIZC,IAAAA,QAAQ,EAAE,IAJE;AAKZG,IAAAA,QAAQ,EAAE,IALE;AAMZC,IAAAA,UAAU,EAAEH,cAAc,CAACV;AANf,GAAd;AAQH,CArBD,C,CAuBA;;;AACA,MAAMc,QAAQ,GAAIR,KAAD,IAAW;AAC1B,SAAO;AACLJ,IAAAA,OAAO,EAAEI,KAAK,CAACJ;AADV,GAAP;AAGD,CAJD,C,CAMA;;;AACA,MAAMa,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLnB,IAAAA,YAAY,EAAGG,EAAD,IAAQgB,QAAQ,CAAC/B,iBAAiB,CAACe,EAAD,CAAlB,CADzB;AAELW,IAAAA,WAAW,EAAGT,OAAD,IAAac,QAAQ,CAACC,gBAAgB,CAACf,OAAD,CAAjB;AAF7B,GAAP;AAID,CALD;;AAOA,eAAenB,OAAO,CAAC+B,QAAD,EAAWC,WAAX,CAAP,CAA+B3B,oBAA/B,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport { fetchStudentThunk, addStudentThunk } from \"../../store/thunks\";\nimport { EditStudentView } from \"../views\";\n\nclass EditStudentContainer extends Component {\n  componentDidMount() {\n    //getting student ID from url\n    this.props.fetchStudent(this.props.match.params.id);\n  }\n\n  render() {\n    return (\n      <EditStudentView \n        student={this.props.student}\n      />\n    );\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n}\n\nhandleSubmit = async event => {\n    event.preventDefault();\n\n    let student = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        email: this.state.email,\n        campusId: this.state.campusId \n        \n    };\n    \n    let updatedStudent = await this.props.editStudent(student);\n\n    this.setState({\n      firstname: \"\", \n      lastname: \"\", \n      email: \"\",\n      campusId: null, \n      redirect: true, \n      redirectId: updatedStudent.id\n    });\n}\n\n// map state to props\nconst mapState = (state) => {\n  return {\n    student: state.student,\n  };\n};\n\n// map dispatch to props\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n    editStudent: (student) => dispatch(editStudentThunk(student)),\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditStudentContainer);"]},"metadata":{},"sourceType":"module"}